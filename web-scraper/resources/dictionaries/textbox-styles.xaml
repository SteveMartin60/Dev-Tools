<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--....................................................................-->
    <Style  TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#F5F0F6"/>
                <Setter Property="Foreground" Value="DarkSlateGray"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="#6667AB"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ...........................................................-->
    <Style x:Key="TextBoxStyle04" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="45"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>
    <!--....................................................................-->
    <Style x:Key="TextBoxStyleTest01" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground"                 Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background"                 Value="Transparent"/>
        <Setter Property="Padding"                    Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment"   Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ...........................................................-->
    <Style x:Key="TextBoxStyle01" x:Name="TextBoxStyle01" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="Red"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="Green"/>
                <Setter Property="Foreground" Value="Coral"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ...........................................................-->
    <Style x:Key="TextBoxStyle03" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ...........................................................-->
    <Style x:Key="TextBoxStyleToolbarTitle" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#F5F0F6"/>
                <Setter Property="Foreground" Value="DarkSlateGray"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="#6667AB"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ...........................................................-->
    <Style x:Key="TextBoxStylePanelInfo" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground"                 Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background"                 Value="Transparent"/>
        <Setter Property="Padding"                    Value="0,-2,0,0"/>
        <Setter Property="Margin"                     Value="3"/>
        <Setter Property="FontSize"                   Value="20"/>
        <Setter Property="Height"                     Value="35"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="IsHitTestVisible"           Value="False"/>
        <Setter Property="IsEnabled"                  Value="False"/>
        <Setter Property="VerticalContentAlignment"   Value="Top"/>
    </Style>
    <!-- ...........................................................-->
    <Style x:Key="TextBoxDarkGrey" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground"                 Value="White"/>
        <Setter Property="Background"                 Value="#FF111111"/>
        <Setter Property="BorderBrush"                Value="Transparent"/>
        <Setter Property="Padding"                    Value="0,-2,0,0"/>
        <Setter Property="Margin"                     Value="0,0.5,0,0"/>
        <Setter Property="FontSize"                   Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="IsHitTestVisible"           Value="True"/>
        <Setter Property="IsEnabled"                  Value="True"/>
        <Setter Property="VerticalContentAlignment"   Value="Top"/>
    </Style>
    <!-- ...........................................................-->
    <Style x:Key="TextBoxReadOnlyDarkGrey" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxDarkGrey}">
        <Setter Property="IsHitTestVisible"           Value="False"/>
        <Setter Property="IsEnabled"                  Value="True"/>
        <Setter Property="IsReadOnly"                 Value="True"/>
        <Setter Property="IsTabStop"                  Value="False"/>
    </Style>
    <!-- ...........................................................-->
    <Style x:Key="TextBoxSemiColon" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxReadOnlyDarkGrey}">
        <Setter Property="Margin"                     Value="-4,0,0,0"/>
    </Style>
    <!-- ...........................................................-->
</ResourceDictionary>